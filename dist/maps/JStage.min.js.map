{"version":3,"sources":["JStage.js","Obj.js","Script.js","index.js"],"names":["JStage","el","width","height","this","getEl","scale","startTimestamp","currentTimestamp","duration","status","IS_IDLE","currentSetupOffset","resources","objs","document","querySelector","jQuery","Node","nodeType","normalizeTime","time","indexOf","slice","isNaN","getStyle","prop","undefined","getComputedStyle","currentStyle","getPropertyValue","IS_FINISHED","IS_ANIMATING","prototype","addResource","resource","push","loadResources","callbacks","len","length","loadedLen","forEach","image","Image","onload","console","log","onProgress","call","onComplete","src","complete","load","createObj","left","right","obj","Obj","appendObj","isAnimating","init","self","setScale","offsetWidth","offsetHeight","style","getReady","standby","setupOffset","resizeEl","recal","wScale","hScale","start","startSetup","OPEN_SETUP","window","requestAnimationFrame","update","bind","isStatic","setProgress","timestamp","finished","hasSetup","isCompleted","setTime","i","l","progress","stage","setStage","top","state","intermediateState","setups","propDiff","executingScripts","transformState","styleState","IS_STATIC","setEl","setSize","setPosition","PROP_DEFAULT","scaleX","scaleY","translateX","translateY","rotate","skew","skewX","skewY","TRANSFORMS","INIT_SETUP","IS_COMPLETED","setState","value","getPropDefaultValue","createSetup","offset","getSetup","scripts","addSetup","Array","script","addScript","addOpenSetup","Script","property","delay","timingFunction","getPropValue","getPropDiffVal","from","to","toLowerCase","createPropDiff","diffVal","fromVal","patchPropDiff","getPropDiff","updateIntermediateState","render","getCurrentTimestamp","getStartTimestamp","isComplete","isSkip","executing","isExecuting","skip","renderState","transformStyle","getScale","transform","openSetup","resetSetup","getDuration","getStateReady","setup","finState","getFinState","isIdle","appendToStage","reset","scriptDuration","durtaion","propDelay","transforms","id","IDLE","EXECUTING","SKIP","COMPLETE","getProgressValue","root","factory","define","amd","module","exports"],"mappings":"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","file":"../JStage.min.js","sourcesContent":["/**\r\n * 舞台构造函数\r\n * @constructor\r\n * @param {int} el\r\n * @param {int} width 舞台的标准宽度，不是元素的实际宽度\r\n * @param {int} height 舞台的标准高度，不是元素的实际高度\r\n */\r\nfunction JStage(el, width, height) {\r\n    this.el = JStage.getEl(el);\r\n    this.width = width,\r\n    this.height = height,\r\n    this.scale,\r\n    this.startTimestamp,\r\n    this.currentTimestamp,\r\n    this.duration = 0,\r\n    this.status = JStage.IS_IDLE,\r\n    this.currentSetupOffset,\r\n    this.resources = [];\r\n    this.objs = [];\r\n}\r\n\r\nJStage.getEl = function(el) {\r\n    if (typeof el === 'string') {\r\n        return document.querySelector(el);\r\n    } else if (el instanceof jQuery) {\r\n        return el[0];\r\n    } else if (typeof el === 'object' &&\r\n        (el instanceof Node && el.nodeType > 0)\r\n    ) {\r\n        return el;\r\n    } else {\r\n        throw 'Invalid el';\r\n    }\r\n};\r\n\r\nJStage.normalizeTime = function(time) {\r\n    if (!time) {\r\n        return 0;\r\n    }\r\n\r\n    if (typeof time === 'number') {\r\n        return time;\r\n    } else if (time.indexOf('ms') > 0) {\r\n        return time.slice(0, -2) - 0;\r\n    } else if (time.indexOf('s') > 0) {\r\n        return time.slice(0, -1) * 1000;\r\n    } else if (isNaN(time)) {\r\n        return time;\r\n    }\r\n};\r\n\r\nJStage.getStyle = function(el, prop) {\r\n    if (typeof getComputedStyle === undefined) {\r\n        return el.currentStyle[prop];\r\n    } else {\r\n        return getComputedStyle(el, null).getPropertyValue(prop);\r\n    }\r\n};\r\n\r\nJStage.IS_IDLE = 0;\r\nJStage.IS_FINISHED = 1;\r\nJStage.IS_ANIMATING = 2;\r\n\r\nJStage.prototype = {\r\n    /**\r\n     * 添加资源\r\n     * @param {string} resource\r\n     */\r\n    addResource: function(resource) {\r\n        if (this.resources.indexOf(resource) < 0) {\r\n            this.resources.push(resource);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    loadResources: function(callbacks) {\r\n        var len = this.resources.length;\r\n        var loadedLen = 0;\r\n\r\n        this.resources.forEach(function(resource) {\r\n            var image = new Image;\r\n            image.onload = function() {\r\n                console.log('image load')\r\n                loadedLen++;\r\n\r\n                if (callbacks.onProgress && typeof callbacks.onProgress === 'function') {\r\n                    callbacks.onProgress.call(this, len, loadedLen);\r\n                }\r\n\r\n                if (loadedLen === len && callbacks.onComplete && typeof callbacks.onComplete === 'function') {\r\n                    callbacks.onComplete.call(null);\r\n                }\r\n            }\r\n\r\n            image.src = resource;\r\n\r\n            if (image.complete) {\r\n                image.load();\r\n            }\r\n        });\r\n    },\r\n\r\n    /**\r\n     * 在舞台上创建一个物体\r\n     * @param {mixed} el 元素对象\r\n     * @param {int} width\r\n     * @param {int} height\r\n     * @param {int} left\r\n     * @param {int} right\r\n     * @returns {JStage.Obj}\r\n     */\r\n    createObj: function(el, width, height, left, right) {\r\n        var obj = new JStage.Obj(el, width, height, left, right);\r\n        this.appendObj(obj);\r\n        return obj;\r\n    },\r\n\r\n    isAnimating: function() {\r\n        return this.status === JStage.IS_ANIMATING;\r\n    },\r\n\r\n    /**\r\n     * 初始化舞台\r\n     */\r\n    init: function() {\r\n        var self = this;\r\n\r\n        this.setScale(this.el.offsetWidth, this.el.offsetHeight);\r\n\r\n        this.el.style.width = this.width * this.scale + 'px';\r\n        this.el.style.height = this.height * this.scale + 'px';\r\n\r\n        // 将舞台元素准备到位\r\n        this.objs.forEach(function(obj) {\r\n            obj.getReady();\r\n\r\n            if (obj.duration > self.duration) {\r\n                self.duration = obj.duration;\r\n            }\r\n        });\r\n    },\r\n\r\n    standby: function(setupOffset) {\r\n        this.startTimestamp = null;\r\n        this.currentTimestamp = null;\r\n\r\n        this.objs.forEach(function(obj) {\r\n            obj.standby(setupOffset);\r\n        }, this);\r\n    },\r\n\r\n    /**\r\n     * 重置舞台元素实际尺寸\r\n     * @param {int|float} width\r\n     * @param {int|float} height\r\n     */\r\n    resizeEl: function(width, height) {\r\n        this.setScale(width, height)\r\n\r\n        // 设置舞台元素的尺寸\r\n        this.el.style.width = this.width * this.scale + 'px';\r\n        this.el.style.height = this.height * this.scale + 'px';\r\n\r\n        this.objs.forEach(function(obj) {\r\n            obj.recal();\r\n        });\r\n    },\r\n\r\n    /**\r\n     * 设置舞台的缩放比例\r\n     * @param {int|float} width 舞台元素实际宽度\r\n     * @param {int|float} height 舞台元素实际宽度\r\n     */\r\n    setScale: function(width, height) {\r\n        var wScale = width / this.width;\r\n        var hScale = height / this.height;\r\n\r\n        if (wScale > hScale) {\r\n            this.scale = hScale;\r\n        } else {\r\n            this.scale = wScale;\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    start: function() {\r\n        this.startSetup(JStage.Obj.OPEN_SETUP);\r\n    },\r\n\r\n    startSetup: function(setupOffset) {\r\n        this.currentSetupOffset = setupOffset;\r\n        this.standby(setupOffset);\r\n\r\n        if (!!window.requestAnimationFrame) {\r\n            if (!this.isAnimating()) {\r\n                this.status = JStage.IS_ANIMATING;\r\n                window.requestAnimationFrame(this.update.bind(this));\r\n            }\r\n            return;\r\n        }\r\n\r\n        this.objs.forEach(function(obj) {\r\n            if (!obj.isStatic()) {\r\n                obj.setProgress(1);\r\n            }\r\n        });\r\n    },\r\n\r\n    update: function(timestamp) {\r\n        if (!this.startTimestamp) {\r\n            this.startTimestamp = timestamp;\r\n        }\r\n\r\n        this.currentTimestamp = timestamp;\r\n\r\n        var finished;\r\n\r\n        this.objs.forEach(function(obj) {\r\n            if (obj.hasSetup(this.currentSetupOffset) &&\r\n                !(obj.isStatic() || obj.isCompleted())\r\n            ) {\r\n                finished = false;\r\n                obj.update(this.currentSetupOffset);\r\n            }\r\n        }, this);\r\n\r\n        // 动画没有结束则继续执行\r\n        if (finished === false) {\r\n            window.requestAnimationFrame(this.update.bind(this));\r\n        } else {\r\n            this.status = JStage.IS_FINISHED;\r\n        }\r\n    },\r\n\r\n    setTime: function(time) {\r\n        for (var i = 0, l = this.objs.length; i < l; i++) {\r\n            if (!this.objs[i].isStatic()) {\r\n                this.objs[i].setTime(time);\r\n            }\r\n        }\r\n    },\r\n\r\n    setProgress: function(progress) {\r\n        var time = this.duration * progress;\r\n        this.setTime(time);\r\n    },\r\n\r\n    /**\r\n     * 往舞台上添加物体\r\n     * @param {JShow.Obj} obj\r\n     */\r\n    appendObj: function(obj) {\r\n        if (!obj.stage && obj.stage !== this) {\r\n            this.objs.push(obj);\r\n            obj.setStage(this);\r\n        }\r\n    }\r\n};","JStage.Obj = function(el, width, height, left, top) {\r\n    this.el, // dom对象\r\n    this.state = {},\r\n    this.intermediateState = {} // 中间状态\r\n    this.setups = {}, // 动画状态\r\n    this.propDiff = {},\r\n    this.executingScripts = {},\r\n\r\n    this.transformState = {}, // transform中间状态\r\n    this.styleState = {}, // style 中间状态\r\n    this.width,\r\n    this.height,\r\n    this.left,\r\n    this.top,\r\n    this.duration = 0;\r\n    this.stage,\r\n    this.status = JStage.Obj.IS_STATIC,\r\n\r\n    this.setEl(el);\r\n    this.setSize(width, height);\r\n    this.setPosition(left, top);\r\n}\r\n\r\nJStage.Obj.PROP_DEFAULT = {\r\n    scale   : 1,\r\n    scaleX  : 1,\r\n    scaleY  : 1,\r\n    translateX  : 0,\r\n    translateY  : 0,\r\n    rotate  : 0,\r\n    skew    : 0,\r\n    skewX   : 0,\r\n    skewY   : 0\r\n};\r\nJStage.Obj.TRANSFORMS = [\r\n    'translateX',\r\n    'translateY',\r\n    'rotate',\r\n    'skew',\r\n    'skewX',\r\n    'skewY',\r\n    'scale',\r\n    'scaleX',\r\n    'scaleY',\r\n];\r\nJStage.Obj.INIT_SETUP = 'INIT_SETUP'; // 初始化状态\r\nJStage.Obj.OPEN_SETUP = 'OPEN_SETUP'; // 开场状态\r\nJStage.Obj.IS_IDLE = 0;\r\nJStage.Obj.IS_COMPLETED = 2;\r\nJStage.Obj.IS_ANIMATING = 3;\r\nJStage.Obj.IS_STATIC = 4;\r\n\r\nJStage.Obj.prototype = {\r\n    setState: function(prop, value) {\r\n        this.state[prop] = value;\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param {string} prop\r\n     */\r\n    getPropDefaultValue: function(prop) {\r\n        if (undefined === JStage.Obj.PROP_DEFAULT[prop]) {\r\n            return 0;\r\n        } else {\r\n            return JStage.Obj.PROP_DEFAULT[prop];\r\n        }\r\n    },\r\n\r\n    createSetup: function(offset) {\r\n        if (undefined === this.getSetup(offset)) {\r\n            this.setups[offset] = {\r\n                scripts: []\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 添加状态脚本\r\n     * @param {string} offset\r\n     * @param {array} scripts\r\n     */\r\n    addSetup: function(offset, scripts) {\r\n        this.createSetup(offset);\r\n\r\n        if (scripts instanceof Array && scripts.length > 0) {\r\n            scripts.forEach(function(script) {\r\n                this.addScript(offset, script)\r\n            }, this);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    addOpenSetup: function(scripts) {\r\n        this.addSetup(JStage.Obj.OPEN_SETUP, scripts);\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * 为状态添加一个脚本\r\n     * @param {string} offset\r\n     * @param {object} script\r\n     */\r\n    addScript: function(offset, script) {\r\n        this.createSetup(offset);\r\n\r\n        this.status = JStage.Obj.IS_IDLE;\r\n\r\n        this.setups[offset].scripts.push(\r\n            new JStage.Script(script.property, script.value, script.duration, script.delay, script.timingFunction)\r\n        );\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param {string} offset\r\n     */\r\n    getSetup: function(offset) {\r\n        return this.setups[offset];\r\n    },\r\n\r\n    getPropValue: function(state, prop) {\r\n        return (undefined === state[prop]) ? this.getPropDefaultValue(prop) : state[prop];\r\n    },\r\n\r\n    getPropDiffVal: function(prop, from, to) {\r\n        if (prop.toLowerCase().indexOf('color') > -1) {\r\n            throw 'unsupported property ' + prop;\r\n        }\r\n\r\n        return to - from;\r\n    },\r\n\r\n    createPropDiff: function(script) {\r\n        var prop = script.property;\r\n\r\n        this.propDiff[script.property] = {\r\n            prop: prop,\r\n            diffVal: this.getPropDiffVal(\r\n                script.property,\r\n                this.getPropValue(this.state, prop),\r\n                script.value\r\n            ),\r\n            fromVal: this.getPropValue(this.state, prop)\r\n        };\r\n    },\r\n\r\n    patchPropDiff: function(propDiff, script) {\r\n        var prop = script.property;\r\n\r\n        propDiff.diffVal = this.getPropDiffVal(\r\n            script.property,\r\n            this.getPropValue(this.intermediateState, prop),\r\n            script.value\r\n        );\r\n        propDiff.fromVal = this.getPropValue(this.intermediateState, prop);\r\n    },\r\n\r\n    getPropDiff: function(offset) {\r\n        return this.propDiff[offset];\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param {object} propDIff\r\n     * @param {float} progress\r\n     */\r\n    updateIntermediateState: function(propDiff, progress) {\r\n        this.intermediateState[propDiff.prop] = progress * propDiff.diffVal + propDiff.fromVal;\r\n    },\r\n\r\n    update: function(setupOffset) {\r\n        this.render(setupOffset === undefined ? JStage.Obj.OPEN_SETUP : setupOffset);\r\n    },\r\n\r\n    render: function(setupOffset) {\r\n        if (undefined === this.getSetup(setupOffset)) {\r\n            return;\r\n        }\r\n\r\n        var startTimestamp;\r\n        var currentTimestamp = this.getCurrentTimestamp();\r\n        var scripts = this.getSetup(setupOffset).scripts;\r\n        var complete;\r\n\r\n        scripts.forEach(function(script) {\r\n            startTimestamp = this.getStartTimestamp();\r\n\r\n            console.log('i', script);\r\n            if (script.isComplete() || script.isSkip()) {\r\n                console.log('cs', script);\r\n                return;\r\n            }\r\n\r\n            complete = false;\r\n\r\n            if (script.delay > 0) {\r\n                startTimestamp += script.delay;\r\n            }\r\n\r\n            if (startTimestamp > currentTimestamp) {\r\n                console.log('ns', script);\r\n                return;\r\n            }\r\n\r\n            var progress = (currentTimestamp - startTimestamp) / script.duration;\r\n\r\n            if (progress > 1) {\r\n                progress = 1;\r\n            }\r\n\r\n            script.executing();\r\n\r\n            if (undefined === this.executingScripts[script.property]) {\r\n                this.executingScripts[script.property] = script;\r\n                // create prop diff\r\n                this.createPropDiff(script);\r\n            }\r\n\r\n            if (this.executingScripts[script.property] !== script &&\r\n                !(script.isSkip() || script.isComplete())\r\n            ) {\r\n                if (this.executingScripts[script.property].isExecuting()) {\r\n                    this.executingScripts[script.property].skip();\r\n                }\r\n\r\n                this.executingScripts[script.property] = script;\r\n                // patch prop diff\r\n                this.patchPropDiff(this.getPropDiff(script.property), script);\r\n            }\r\n\r\n            this.updateIntermediateState(this.getPropDiff(script.property), progress);\r\n\r\n            if (progress === 1) {\r\n                script.complete();\r\n            }\r\n        }, this);\r\n\r\n        this.status = complete === false ? JStage.Obj.IS_ANIMATING : JStage.Obj.IS_COMPLETED;\r\n\r\n        this.renderState();\r\n    },\r\n\r\n    renderState: function() {\r\n        for (var prop in this.intermediateState) {\r\n            if (JStage.Obj.TRANSFORMS.indexOf(prop) > -1) {\r\n                var transformStyle = '';\r\n\r\n                switch (prop) {\r\n                    case 'translateX':\r\n                    case 'translateY':\r\n                        transformStyle += prop + '(' + this.intermediateState[prop] + this.getScale() + 'px) ';\r\n                        break;\r\n                    case 'rotate':\r\n                    case 'skew':\r\n                    case 'skewX':\r\n                    case 'skewY':\r\n                        transformStyle += prop + '(' + this.intermediateState[prop] + 'deg) ';\r\n                        break;\r\n                    case 'scale':\r\n                    case 'scaleX':\r\n                    case 'scaleY':\r\n                        transformStyle += prop + '(' + this.intermediateState[prop] + ') ';\r\n                        break;\r\n                }\r\n            } else {\r\n                if (['left', 'top', 'width', 'height'].indexOf(prop) > -1) {\r\n                    this.el.style[prop] = this.intermediateState[prop] * this.getScale() + 'px';\r\n                } else {\r\n                    this.el.style[prop] = this.intermediateState[prop];\r\n                }\r\n            }\r\n        }\r\n\r\n        if (undefined !== transformStyle) {\r\n            this.el.style.transform = transformStyle;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 设置物体尺寸\r\n     * @param {int} width\r\n     * @param {int} height\r\n     * @returns {this}\r\n     */\r\n    setSize: function(width, height) {\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        this.setState('width', width)\r\n            .setState('height', height);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * 设置物体位置\r\n     * @param {int} left\r\n     * @param {int} top\r\n     * @returns {this}\r\n     */\r\n    setPosition: function(left, top) {\r\n        this.left = left;\r\n        this.top = top;\r\n\r\n        this.setState('left', left)\r\n            .setState('top', top);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * 获得当前元素的缩放比例\r\n     * @returns {float}\r\n     */\r\n    getScale: function() {\r\n        return this.stage.scale;\r\n    },\r\n\r\n    /**\r\n     * 获得当前舞台的开始时间戳\r\n     * @returns {float}\r\n     */\r\n    getStartTimestamp: function() {\r\n        return this.stage.startTimestamp;\r\n    },\r\n\r\n    /**\r\n     * 获得当前舞台的当前时间戳\r\n     * @returns {float}\r\n     */\r\n    getCurrentTimestamp: function() {\r\n        return this.stage.currentTimestamp;\r\n    },\r\n\r\n    /**\r\n     * 将舞台元素准备好\r\n     */\r\n    getReady: function() {\r\n        var openSetup = this.getSetup(JStage.Obj.OPEN_SETUP);\r\n\r\n        if (undefined !== openSetup) {\r\n            this.resetSetup(openSetup);\r\n            this.duration = this.getDuration(openSetup);\r\n        }\r\n\r\n        // 重置中间状态\r\n        this.intermediateState = {};\r\n\r\n        // 初始化元素样式状态，包括当前状态以及阶段状态\r\n        for (var prop in this.state) {\r\n            this.intermediateState[prop] = this.state[prop];\r\n        }\r\n\r\n        this.renderState();\r\n    },\r\n\r\n    getStateReady: function(setupOffset) {\r\n        // 重置中间状态\r\n        this.intermediateState = {};\r\n\r\n        var setup = this.getSetup(setupOffset);\r\n        var finState = this.getFinState(state);\r\n\r\n        for (var prop in setup.scripts) {\r\n            if (undefined === finState[prop]) {\r\n                finState[prop] = setup.scripts[prop];\r\n            }\r\n        }\r\n\r\n        for (var prop in finState) {\r\n            this.intermediateState[prop] = finState[prop];\r\n        }\r\n\r\n        this.duration = this.getDuration(setup);\r\n        this.renderState();\r\n    },\r\n\r\n    setEl: function(el) {\r\n        this.el = JStage.getEl(el);\r\n    },\r\n\r\n    /**\r\n     * 判断元素是否正在执行动画\r\n     * @returns {boolean}\r\n     */\r\n    isAnimating: function() {\r\n        return this.status === JStage.Obj.IS_ANIMATING;\r\n    },\r\n\r\n    /**\r\n     * 判断元素动画是否已经完成\r\n     * @returns {boolean}\r\n     */\r\n    isCompleted: function() {\r\n        return this.status === JStage.Obj.IS_COMPLETED;\r\n    },\r\n\r\n    /**\r\n     * 判断元素是否是静止元素\r\n     * @returns {boolean}\r\n     */\r\n    isStatic: function() {\r\n        return this.status === JStage.Obj.IS_STATIC;\r\n    },\r\n\r\n    /**\r\n     * 判断元素是否是等待动画执行状态\r\n     * @returns {boolean}\r\n     */\r\n    isIdle: function() {\r\n        return this.status === JStage.Obj.IS_IDLE;\r\n    },\r\n\r\n    /**\r\n     * 重计算部分脚本\r\n     * 主要用于更新场景大小变化后元素的各种尺寸和位置相关属性\r\n     */\r\n    recal: function() {\r\n        if (!this.isAnimating()) {\r\n            this.renderState();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 将物体添加到指定的舞台上\r\n     * @param {JStage.Stage} stage\r\n     */\r\n    appendToStage: function(stage) {\r\n        stage.appendObj(this);\r\n    },\r\n\r\n    /**\r\n     * 设置物体到指定的舞台上\r\n     * @param {JStage.setStage} stage\r\n     */\r\n    setStage: function(stage) {\r\n        this.stage = stage;\r\n    },\r\n\r\n    /**\r\n     * 重置舞台元素状态\r\n     */\r\n    reset: function() {\r\n        this.getReady();\r\n    },\r\n\r\n    /**\r\n     * 设置舞台播放到指定毫秒数\r\n     * @param {int} time 舞台播放到指定毫秒数\r\n     */\r\n    setTime: function(time) {\r\n        //\r\n    },\r\n\r\n    /**\r\n     * 获得动画时间，这个时间包含延迟时间\r\n     * @param {object} setup\r\n     * @returns {int}\r\n     */\r\n    getDuration: function(setup) {\r\n        var duration = 0;\r\n        var scriptDuration = 0;\r\n\r\n        setup.scripts.forEach(function(script) {\r\n            scriptDuration = script.duration + script.delay;\r\n\r\n            if (duration < scriptDuration) {\r\n                durtaion = scriptDuration;\r\n            }\r\n        });\r\n\r\n        return duration;\r\n    },\r\n\r\n    /**\r\n     * 获得设置的最终状态，需要处理同属性延迟执行的情况，比如两个left移动先后执行\r\n     * @param {object} setup\r\n     */\r\n    getFinState: function(setup) {\r\n        var finState = {};\r\n        var propDelay = {};\r\n\r\n        setup.scripts.forEach(function(script) {\r\n            if (undefined === propDelay[script.property]) {\r\n                propDelay[script.property] = script.delay;\r\n                finState[script.property] = script.property;\r\n            } else if (script.delay > propDelay[script.property]) {\r\n                propDelay[script.property] = script.delay;\r\n                finState[script.property] = script.property;\r\n            }\r\n        });\r\n\r\n        return finState;\r\n    },\r\n\r\n    /**\r\n     * 重置设置状态\r\n     * @param {object} setup\r\n     */\r\n    resetSetup: function(setup) {\r\n        setup.scripts.forEach(function(script) {\r\n            script.reset();\r\n        });\r\n    },\r\n\r\n    standby: function(offset) {\r\n        var setup = this.getSetup(offset);\r\n\r\n        if (undefined === setup) {\r\n            return;\r\n        }\r\nconsole.log(this);\r\n        this.status = JStage.Obj.IS_IDLE;\r\n        this.resetSetup(setup);\r\n    },\r\n\r\n    hasSetup: function(offset) {\r\n        return undefined !== this.setups[offset];\r\n    }\r\n};","/**\r\n * 元素脚本\r\n * @param {string} property\r\n * @param {mixed} value 变化值，不是目标值\r\n * @param {mixed} duration\r\n * @param {string} timingFunction\r\n * @param {int} delay 毫秒单位\r\n */\r\nJStage.Script = function(property, value, duration, delay, timingFunction) {\r\n    this.transforms = ['scaleX', 'scaleY', 'skewX', 'skewY', 'rotate', 'translateX', 'translateY'];\r\n\r\n    this.id = JStage.Script.i++;\r\n    this.property = property;\r\n    this.value = value;\r\n    this.duration = this.normalizeTime(duration);\r\n    this.timingFunction = !!timingFunction ? timingFunction : 'linear';\r\n    this.delay = this.normalizeTime(delay);\r\n    this.status = JStage.Script.IDLE;\r\n};\r\n\r\nJStage.Script.i = 0;\r\nJStage.Script.IDLE = 0;\r\nJStage.Script.EXECUTING = 1;\r\nJStage.Script.SKIP = 2;\r\nJStage.Script.COMPLETE = 3;\r\n\r\nJStage.Script.prototype = {\r\n    reset: function() {\r\n        this.status = JStage.Script.IDLE;\r\n    },\r\n\r\n    executing: function() {\r\n        this.status = JStage.Script.EXECUTING;\r\n    },\r\n\r\n    skip: function() {\r\n        this.status = JStage.Script.SKIP;\r\n    },\r\n\r\n    complete: function() {\r\n        this.status = JStage.Script.COMPLETE;\r\n    },\r\n\r\n    isExecuting: function() {\r\n        return this.status === JStage.Script.EXECUTING;\r\n    },\r\n\r\n    isSkip: function() {\r\n        return this.status === JStage.Script.SKIP;\r\n    },\r\n\r\n    isComplete: function() {\r\n        return this.status === JStage.Script.COMPLETE;\r\n    },\r\n\r\n    normalizeTime: function(time) {\r\n        if (!time) {\r\n            return 0;\r\n        }\r\n    \r\n        if (typeof time === 'number') {\r\n            return time;\r\n        } else if (time.indexOf('ms') > 0) {\r\n            return time.slice(0, -2) - 0;\r\n        } else if (time.indexOf('s') > 0) {\r\n            return time.slice(0, -1) * 1000;\r\n        } else if (isNaN(time)) {\r\n            return time;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 根据运行进度来计算脚本当前进度的值\r\n     * @param {float} progress\r\n     */\r\n    getProgressValue: function(progress) {\r\n        return progress * this.value;\r\n    }\r\n};","// Uses Node, AMD or browser globals to create a module.\r\n\r\n// If you want something that will work in other stricter CommonJS environments,\r\n// or if you need to create a circular dependency, see commonJsStrict.js\r\n\r\n// Defines a module \"returnExports\" that depends another module called \"b\".\r\n// Note that the name of the module is implied by the file name. It is best\r\n// if the file name and the exported global have matching names.\r\n\r\n// If the 'b' module also uses this type of boilerplate, then\r\n// in the browser, it will create a global .b that is used below.\r\n\r\n// If you do not want to support the browser global path, then you\r\n// can remove the `root` use and the passing `this` as the first arg to\r\n// the top function.\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        // AMD. Register as an anonymous module.\r\n        define(factory);\r\n    } else if (typeof module === 'object' && module.exports) {\r\n        // Node. Does not work with strict CommonJS, but\r\n        // only CommonJS-like environments that support module.exports,\r\n        // like Node.\r\n        module.exports = factory();\r\n    } else {\r\n        // Browser globals (root is window)\r\n        root.JStage = factory();\r\n    }\r\n})(window, function () {\r\n    // Just return a value to define the module export.\r\n    // This example returns an object, but the module\r\n    // can return a function as the exported value.\r\n    return JStage;\r\n});"]}