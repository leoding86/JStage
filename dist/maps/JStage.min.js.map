{"version":3,"sources":["JStage.js","Obj.js","Script.js","index.js"],"names":["JStage","el","width","height","this","getEl","scale","startTimestamp","currentTimestamp","duration","status","IS_IDLE","currentSetupOffset","resources","objs","document","querySelector","jQuery","Node","nodeType","normalizeTime","time","indexOf","slice","isNaN","getStyle","prop","undefined","getComputedStyle","currentStyle","getPropertyValue","IS_FINISHED","prototype","addResource","resource","push","loadResources","callbacks","len","length","loadedLen","forEach","image","Image","onload","console","log","onProgress","call","onComplete","src","complete","load","createObj","left","right","obj","Obj","appendObj","init","self","setScale","offsetWidth","offsetHeight","style","getReady","standby","setupOffset","resizeEl","recal","wScale","hScale","start","startSetup","OPEN_SETUP","window","requestAnimationFrame","update","bind","isStatic","setProgress","timestamp","finished","i","l","hasSetup","isCompleted","setTime","progress","stage","setStage","top","state","intermediateState","setups","propDiff","executingScripts","transformState","styleState","IS_STATIC","setEl","setSize","setPosition","PROP_DEFAULT","scaleX","scaleY","translateX","translateY","rotate","skew","skewX","skewY","TRANSFORMS","INIT_SETUP","IS_COMPLETED","IS_ANIMATING","setState","value","getPropDefaultValue","createSetup","offset","getSetup","scripts","addSetup","Array","script","addScript","addOpenSetup","Script","property","delay","timingFunction","getPropDiffVal","from","to","toLowerCase","createPropDiff","diffVal","fromVal","patchPropDiff","getPropDiff","updateIntermediateState","render","getStartTimestamp","getCurrentTimestamp","isComplete","isSkip","executing","isExecuting","skip","renderState","transformStyle","getScale","transform","openSetup","resetSetup","getDuration","getStateReady","setup","finState","getFinState","isAnimating","isIdle","appendToStage","reset","scriptDuration","durtaion","propDelay","transforms","id","IDLE","EXECUTING","SKIP","COMPLETE","getProgressValue","root","factory","define","amd","module","exports"],"mappings":"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","file":"../JStage.min.js","sourcesContent":["/**\n * 舞台构造函数\n * @constructor\n * @param {int} el\n * @param {int} width 舞台的标准宽度，不是元素的实际宽度\n * @param {int} height 舞台的标准高度，不是元素的实际高度\n */\nfunction JStage(el, width, height) {\n    this.el = JStage.getEl(el);\n    this.width = width,\n    this.height = height,\n    this.scale,\n    this.startTimestamp,\n    this.currentTimestamp,\n    this.duration = 0,\n    this.status = JStage.IS_IDLE,\n    this.currentSetupOffset,\n    this.resources = [];\n    this.objs = [];\n}\n\nJStage.getEl = function(el) {\n    if (typeof el === 'string') {\n        return document.querySelector(el);\n    } else if (el instanceof jQuery) {\n        return el[0];\n    } else if (typeof el === 'object' &&\n        (el instanceof Node && el.nodeType > 0)\n    ) {\n        return el;\n    } else {\n        throw 'Invalid el';\n    }\n};\n\nJStage.normalizeTime = function(time) {\n    if (!time) {\n        return 0;\n    }\n\n    if (time.indexOf('ms') > 0) {\n        return time.slice(0, -2) - 0;\n    } else if (time.indexOf('s') > 0) {\n        return time.slice(0, -1) * 1000;\n    } else if (isNaN(time)) {\n        throw 'Invalid time';\n    }\n};\n\nJStage.getStyle = function(el, prop) {\n    if (typeof getComputedStyle === undefined) {\n        return el.currentStyle[prop];\n    } else {\n        return getComputedStyle(el, null).getPropertyValue(prop);\n    }\n};\n\nJStage.IS_IDLE = 0;\nJStage.IS_FINISHED = 1;\n\nJStage.prototype = {\n    /**\n     * 添加资源\n     * @param {string} resource\n     */\n    addResource: function(resource) {\n        if (this.resources.indexOf(resource) < 0) {\n            this.resources.push(resource);\n        }\n\n        return this;\n    },\n\n    loadResources: function(callbacks) {\n        var self = this;\n        var len = this.resources.length;\n        var loadedLen = 0;\n\n        this.resources.forEach(function(resource) {\n            var image = new Image;\n            image.onload = function() {\n                console.log('image load')\n                loadedLen++;\n\n                if (callbacks.onProgress && typeof callbacks.onProgress === 'function') {\n                    callbacks.onProgress.call(this, len, loadedLen);\n                }\n\n                if (loadedLen === len && callbacks.onComplete && typeof callbacks.onComplete === 'function') {\n                    callbacks.onComplete.call(null);\n                }\n            }\n\n            image.src = resource;\n\n            if (image.complete) {\n                image.load();\n            }\n        });\n    },\n\n    /**\n     * 在舞台上创建一个物体\n     * @param {mixed} el 元素对象\n     * @param {int} width\n     * @param {int} height\n     * @param {int} left\n     * @param {int} right\n     * @returns {JStage.Obj}\n     */\n    createObj: function(el, width, height, left, right) {\n        var obj = new JStage.Obj(el, width, height, left, right);\n        this.appendObj(obj);\n        return obj;\n    },\n\n    /**\n     * 初始化舞台\n     */\n    init: function() {\n        var self = this;\n\n        this.setScale(this.el.offsetWidth, this.el.offsetHeight);\n\n        this.el.style.width = this.width * this.scale + 'px';\n        this.el.style.height = this.height * this.scale + 'px';\n\n        // 将舞台元素准备到位\n        this.objs.forEach(function(obj) {\n            obj.getReady();\n\n            if (obj.duration > self.duration) {\n                self.duration = obj.duration;\n            }\n        });\n    },\n\n    standby: function(setupOffset) {\n        this.startTimestamp = null;\n        this.currentTimestamp = null;\n\n        this.objs.forEach(function(obj) {\n            obj.standby(setupOffset);\n        }, this);\n    },\n\n    /**\n     * 重置舞台元素实际尺寸\n     * @param {int|float} width\n     * @param {int|float} height\n     */\n    resizeEl: function(width, height) {\n        this.setScale(width, height)\n\n        // 设置舞台元素的尺寸\n        this.el.style.width = this.width * this.scale + 'px';\n        this.el.style.height = this.height * this.scale + 'px';\n\n        this.objs.forEach(function(obj) {\n            obj.recal();\n        });\n    },\n\n    /**\n     * 设置舞台的缩放比例\n     * @param {int|float} width 舞台元素实际宽度\n     * @param {int|float} height 舞台元素实际宽度\n     */\n    setScale: function(width, height) {\n        var wScale = width / this.width;\n        var hScale = height / this.height;\n\n        if (wScale > hScale) {\n            this.scale = hScale;\n        } else {\n            this.scale = wScale;\n        }\n\n        return this;\n    },\n\n    start: function() {\n        this.startSetup(JStage.Obj.OPEN_SETUP);\n    },\n\n    startSetup: function(setupOffset) {\n        this.currentSetupOffset = setupOffset;\n        this.standby(setupOffset);\n\n        if (!!window.requestAnimationFrame) {\n            window.requestAnimationFrame(this.update.bind(this));\n            return;\n        }\n\n        this.objs.forEach(function(obj) {\n            if (!obj.isStatic()) {\n                obj.setProgress(1);\n            }\n        });\n    },\n\n    update: function(timestamp) {\n        if (!this.startTimestamp) {\n            this.startTimestamp = timestamp;\n        }\n\n        this.currentTimestamp = timestamp;\n\n        var finished;\n\n        for (var i = 0, l = this.objs.length; i < l; i++) {\n            var obj = this.objs[i];\n\n            if (obj.hasSetup(this.currentSetupOffset) &&\n                !(obj.isStatic() || obj.isCompleted())\n            ) {\n                finished = false;\n                obj.update(this.currentSetupOffset);\n            }\n        }\n\n        // 动画没有结束则继续执行\n        if (finished === false) {\n            window.requestAnimationFrame(this.update.bind(this));\n        }\n    },\n\n    setTime: function(time) {\n        for (var i = 0, l = this.objs.length; i < l; i++) {\n            if (!this.objs[i].isStatic()) {\n                this.objs[i].setTime(time);\n            }\n        }\n    },\n\n    setProgress: function(progress) {\n        var time = this.duration * progress;\n        this.setTime(time);\n    },\n\n    /**\n     * 往舞台上添加物体\n     * @param {JShow.Obj} obj\n     */\n    appendObj: function(obj) {\n        if (!obj.stage && obj.stage !== this) {\n            this.objs.push(obj);\n            obj.setStage(this);\n        }\n    }\n};","JStage.Obj = function(el, width, height, left, top) {\n    this.el, // dom对象\n    this.state = {},\n    this.intermediateState = {} // 中间状态\n    this.setups = {}, // 动画状态\n    this.propDiff = {},\n    this.executingScripts = {},\n\n    this.transformState = {}, // transform中间状态\n    this.styleState = {}, // style 中间状态\n    this.width,\n    this.height,\n    this.left,\n    this.top,\n    this.duration = 0;\n    this.stage,\n    this.status = JStage.Obj.IS_STATIC,\n\n    this.setEl(el);\n    this.setSize(width, height);\n    this.setPosition(left, top);\n}\n\nJStage.Obj.PROP_DEFAULT = {\n    scale   : 1,\n    scaleX  : 1,\n    scaleY  : 1,\n    translateX  : 0,\n    translateY  : 0,\n    rotate  : 0,\n    skew    : 0,\n    skewX   : 0,\n    skewY   : 0\n};\nJStage.Obj.TRANSFORMS = [\n    'translateX',\n    'translateY',\n    'rotate',\n    'skew',\n    'skewX',\n    'skewY',\n    'scale',\n    'scaleX',\n    'scaleY',\n];\nJStage.Obj.INIT_SETUP = 'INIT_SETUP'; // 初始化状态\nJStage.Obj.OPEN_SETUP = 'OPEN_SETUP'; // 开场状态\nJStage.Obj.IS_IDLE = 0;\nJStage.Obj.IS_COMPLETED = 2;\nJStage.Obj.IS_ANIMATING = 3;\nJStage.Obj.IS_STATIC = 4;\n\nJStage.Obj.prototype = {\n    setState: function(prop, value) {\n        this.state[prop] = value;\n        return this;\n    },\n\n    /**\n     *\n     * @param {string} prop\n     */\n    getPropDefaultValue: function(prop) {\n        if (undefined === JStage.Obj.PROP_DEFAULT[prop]) {\n            return 0;\n        } else {\n            return JStage.Obj.PROP_DEFAULT[prop];\n        }\n    },\n\n    createSetup: function(offset) {\n        if (undefined === this.getSetup(offset)) {\n            this.setups[offset] = {\n                scripts: []\n            }\n        }\n    },\n\n    /**\n     * 添加状态脚本\n     * @param {string} offset\n     * @param {array} scripts\n     */\n    addSetup: function(offset, scripts) {\n        this.createSetup(offset);\n\n        if (scripts instanceof Array && scripts.length > 0) {\n            scripts.forEach(function(script) {\n                this.addScript(offset, script)\n            }, this);\n        }\n\n        return this;\n    },\n\n    addOpenSetup: function(scripts) {\n        this.addSetup(JStage.Obj.OPEN_SETUP, scripts);\n        return this;\n    },\n\n    /**\n     * 为状态添加一个脚本\n     * @param {string} offset\n     * @param {object} script\n     */\n    addScript: function(offset, script) {\n        this.createSetup(offset);\n\n        this.status = JStage.Obj.IS_IDLE;\n\n        this.setups[offset].scripts.push(\n            new JStage.Script(script.property, script.value, script.duration, script.delay, script.timingFunction)\n        );\n\n        return this;\n    },\n\n    /**\n     *\n     * @param {string} offset\n     */\n    getSetup: function(offset) {\n        return this.setups[offset];\n    },\n\n    getPropDiffVal: function(prop, from, to) {\n        if (prop.toLowerCase().indexOf('color') > -1) {\n            throw 'unsupported property ' + prop;\n        }\n\n        return to - from;\n    },\n\n    createPropDiff: function(script) {\n        var prop = script.property;\n\n        this.propDiff[script.property] = {\n            prop: script.property,\n            diffVal: this.getPropDiffVal(\n                script.property,\n                (undefined === this.state[prop] ? this.getPropDefaultValue(prop) : this.state[prop]),\n                script.value\n            ),\n            fromVal: this.state[prop]\n        };\n    },\n\n    patchPropDiff: function(propDiff, script) {\n        var prop = script.property;\n\n        propDiff.diffVal = this.getPropDiffVal(\n            script.property,\n            this.intermediateState[prop],\n            script.value\n        );\n        propDiff.fromVal = this.intermediateState[prop];\n    },\n\n    getPropDiff: function(offset) {\n        return this.propDiff[offset];\n    },\n\n    /**\n     *\n     * @param {object} propDIff\n     * @param {float} progress\n     */\n    updateIntermediateState: function(propDiff, progress) {\n        this.intermediateState[propDiff.prop] = progress * propDiff.diffVal + propDiff.fromVal;\n    },\n\n    update: function(setupOffset) {\n        this.render(setupOffset === undefined ? JStage.Obj.OPEN_SETUP : setupOffset);\n    },\n\n    render: function(setupOffset) {\n        if (undefined === this.getSetup(setupOffset)) {\n            return;\n        }\n\n        var startTimestamp = this.getStartTimestamp();\n        var currentTimestamp = this.getCurrentTimestamp();\n        var scripts = this.getSetup(setupOffset).scripts;\n        var complete;\n\n        scripts.forEach(function(script) {\n            if (script.delay > 0) {\n                startTimestamp += script.delay;\n            }\n\n            if (startTimestamp > currentTimestamp) {\n                return;\n            }\n\n            var progress = (currentTimestamp - startTimestamp) / script.duration;\n\n            if (progress > 1) {\n                progress = 1;\n            }\n\n            if (script.isComplete() || script.isSkip()) {\n                return;\n            }\n\n            complete = false;\n            script.executing();\n\n            if (undefined === this.executingScripts[script.property]) {\n                this.executingScripts[script.property] = script;\n                // create prop diff\n                this.createPropDiff(script);\n            }\n\n            if (this.executingScripts[script.property] !== script &&\n                !(script.isSkip() || script.isComplete())\n            ) {\n                if (this.executingScripts[script.property].isExecuting()) {\n                    this.executingScripts[script.property].skip();\n                }\n\n                this.executingScripts[script.property] = script;\n\n                // patch prop diff\n                this.patchPropDiff(this.getPropDiff(script.property), script);\n            }\n\n            this.updateIntermediateState(this.getPropDiff(script.property), progress);\n\n            if (progress === 1) {\n                script.complete();\n            }\n        }, this);\n\n        this.status = complete === false ? JStage.Obj.IS_ANIMATING : JStage.Obj.IS_COMPLETED;\n\n        this.renderState();\n    },\n\n    renderState: function() {\n        console.log(this.intermediateState);\n        for (var prop in this.intermediateState) {\n            if (JStage.Obj.TRANSFORMS.indexOf(prop) > -1) {\n                var transformStyle = '';\n\n                switch (prop) {\n                    case 'translateX':\n                    case 'translateY':\n                        transformStyle += prop + '(' + this.intermediateState[prop] + this.getScale() + 'px) ';\n                        break;\n                    case 'rotate':\n                    case 'skew':\n                    case 'skewX':\n                    case 'skewY':\n                        transformStyle += prop + '(' + this.intermediateState[prop] + 'deg) ';\n                        break;\n                    case 'scale':\n                    case 'scaleX':\n                    case 'scaleY':\n                        transformStyle += prop + '(' + this.intermediateState[prop] + ') ';\n                        break;\n                }\n            } else {\n                if (['left', 'top', 'width', 'height'].indexOf(prop) > -1) {\n                    this.el.style[prop] = this.intermediateState[prop] * this.getScale() + 'px';\n                } else {\n                    this.el.style[prop] = this.intermediateState[prop];\n                }\n            }\n        }\n\n        if (undefined !== transformStyle) {\n            this.el.style.transform = transformStyle;\n        }\n    },\n\n    /**\n     * 设置物体尺寸\n     * @param {int} width\n     * @param {int} height\n     * @returns {this}\n     */\n    setSize: function(width, height) {\n        this.width = width;\n        this.height = height;\n\n        this.setState('width', width)\n            .setState('height', height);\n\n        return this;\n    },\n\n    /**\n     * 设置物体位置\n     * @param {int} left\n     * @param {int} top\n     * @returns {this}\n     */\n    setPosition: function(left, top) {\n        this.left = left;\n        this.top = top;\n\n        this.setState('left', left)\n            .setState('top', top);\n\n        return this;\n    },\n\n    /**\n     * 获得当前元素的缩放比例\n     * @returns {float}\n     */\n    getScale: function() {\n        return this.stage.scale;\n    },\n\n    /**\n     * 获得当前舞台的开始时间戳\n     * @returns {float}\n     */\n    getStartTimestamp: function() {\n        return this.stage.startTimestamp;\n    },\n\n    /**\n     * 获得当前舞台的当前时间戳\n     * @returns {float}\n     */\n    getCurrentTimestamp: function() {\n        return this.stage.currentTimestamp;\n    },\n\n    /**\n     * 将舞台元素准备好\n     */\n    getReady: function() {\n        var openSetup = this.getSetup(JStage.Obj.OPEN_SETUP);\n\n        if (undefined !== openSetup) {\n            this.resetSetup(openSetup);\n        }\n\n        // 重置中间状态\n        this.intermediateState = {};\n\n        // 初始化元素样式状态，包括当前状态以及阶段状态\n        for (var prop in this.state) {\n            this.intermediateState[prop] = this.state[prop];\n        }\n\n        this.duration = this.getDuration(openSetup);\n        this.renderState();\n    },\n\n    getStateReady: function(setupOffset) {\n        // 重置中间状态\n        this.intermediateState = {};\n\n        var setup = this.getSetup(setupOffset);\n        var finState = this.getFinState(state);\n\n        for (var prop in setup.scripts) {\n            if (undefined === finState[prop]) {\n                finState[prop] = setup.scripts[prop];\n            }\n        }\n\n        for (var prop in finState) {\n            this.intermediateState[prop] = finState[prop];\n        }\n\n        this.duration = this.getDuration(setup);\n        this.renderState();\n    },\n\n    setEl: function(el) {\n        this.el = JStage.getEl(el);\n    },\n\n    /**\n     * 判断元素是否正在执行动画\n     * @returns {boolean}\n     */\n    isAnimating: function() {\n        return this.status === JStage.Obj.IS_ANIMATING;\n    },\n\n    /**\n     * 判断元素动画是否已经完成\n     * @returns {boolean}\n     */\n    isCompleted: function() {\n        return this.status === JStage.Obj.IS_COMPLETED;\n    },\n\n    /**\n     * 判断元素是否是静止元素\n     * @returns {boolean}\n     */\n    isStatic: function() {\n        return this.status === JStage.Obj.IS_STATIC;\n    },\n\n    /**\n     * 判断元素是否是等待动画执行状态\n     * @returns {boolean}\n     */\n    isIdle: function() {\n        return this.status === JStage.Obj.IS_IDLE;\n    },\n\n    /**\n     * 重计算部分脚本\n     * 主要用于更新场景大小变化后元素的各种尺寸和位置相关属性\n     */\n    recal: function() {\n        if (!this.isAnimating()) {\n            this.renderState();\n        }\n    },\n\n    /**\n     * 将物体添加到指定的舞台上\n     * @param {JStage.Stage} stage\n     */\n    appendToStage: function(stage) {\n        stage.appendObj(this);\n    },\n\n    /**\n     * 设置物体到指定的舞台上\n     * @param {JStage.setStage} stage\n     */\n    setStage: function(stage) {\n        this.stage = stage;\n    },\n\n    /**\n     * 重置舞台元素状态\n     */\n    reset: function() {\n        this.getReady();\n    },\n\n    /**\n     * 设置舞台播放到指定毫秒数\n     * @param {int} time 舞台播放到指定毫秒数\n     */\n    setTime: function(time) {\n        //\n    },\n\n    /**\n     * 获得动画时间，这个时间包含延迟时间\n     * @param {object} setup\n     * @returns {int}\n     */\n    getDuration: function(setup) {\n        var duration = 0;\n        var scriptDuration = 0;\n\n        setup.scripts.forEach(function(script) {\n            scriptDuration = script.duration + script.delay;\n\n            if (duration < scriptDuration) {\n                durtaion = scriptDuration;\n            }\n        });\n\n        return duration;\n    },\n\n    /**\n     * 获得设置的最终状态，需要处理同属性延迟执行的情况，比如两个left移动先后执行\n     * @param {object} setup\n     */\n    getFinState: function(setup) {\n        var finState = {};\n        var propDelay = {};\n\n        setup.scripts.forEach(function(script) {\n            if (undefined === propDelay[script.property]) {\n                propDelay[script.property] = script.delay;\n                finState[script.property] = script.property;\n            } else if (script.delay > propDelay[script.property]) {\n                propDelay[script.property] = script.delay;\n                finState[script.property] = script.property;\n            }\n        });\n\n        return finState;\n    },\n\n    /**\n     * 重置设置状态\n     * @param {object} setup\n     */\n    resetSetup: function(setup) {\n        setup.scripts.forEach(function(script) {\n            script.reset();\n        });\n    },\n\n    standby: function(offset) {\n        var setup = this.getSetup(offset);\n\n        if (undefined === setup) {\n            return;\n        }\nconsole.log(this);\n        this.status = JStage.Obj.IS_IDLE;\n        this.resetSetup(setup);\n    },\n\n    hasSetup: function(offset) {\n        return undefined !== this.setups[offset];\n    }\n};","/**\n * 元素脚本\n * @param {string} property\n * @param {mixed} value 变化值，不是目标值\n * @param {mixed} duration\n * @param {string} timingFunction\n * @param {int} delay 毫秒单位\n */\nJStage.Script = function(property, value, duration, delay, timingFunction) {\n    this.transforms = ['scaleX', 'scaleY', 'skewX', 'skewY', 'rotate', 'translateX', 'translateY'];\n\n    this.id = JStage.Script.i++;\n    this.property = property;\n    this.value = value;\n    this.duration = this.normalizeTime(duration);\n    this.timingFunction = !!timingFunction ? timingFunction : 'linear';\n    this.delay = this.normalizeTime(delay);\n    this.status = JStage.Script.IDLE;\n};\n\nJStage.Script.i = 0;\nJStage.Script.IDLE = 0;\nJStage.Script.EXECUTING = 1;\nJStage.Script.SKIP = 2;\nJStage.Script.COMPLETE = 3;\n\nJStage.Script.prototype = {\n    reset: function() {\n        this.status = JStage.Script.IDLE;\n    },\n\n    executing: function() {\n        this.status = JStage.Script.EXECUTING;\n    },\n\n    skip: function() {\n        this.status = JStage.Script.SKIP;\n    },\n\n    complete: function() {\n        this.status = JStage.Script.COMPLETE;\n    },\n\n    isExecuting: function() {\n        return this.status === JStage.Script.EXECUTING;\n    },\n\n    isSkip: function() {\n        return this.status === JStage.Script.SKIP;\n    },\n\n    isComplete: function() {\n        return this.status === JStage.Script.COMPLETE;\n    },\n\n    normalizeTime: function(time) {\n        if (!time) {\n            return 0;\n        }\n\n        if (time.indexOf('ms') > 0) {\n            return time.slice(0, -2) - 0;\n        } else if (time.indexOf('s') > 0) {\n            return time.slice(0, -1) * 1000;\n        } else if (isNaN(time)) {\n            throw 'Invalid time';\n        }\n    },\n\n    /**\n     * 根据运行进度来计算脚本当前进度的值\n     * @param {float} progress\n     */\n    getProgressValue: function(progress) {\n        return progress * this.value;\n    }\n};","// Uses Node, AMD or browser globals to create a module.\n\n// If you want something that will work in other stricter CommonJS environments,\n// or if you need to create a circular dependency, see commonJsStrict.js\n\n// Defines a module \"returnExports\" that depends another module called \"b\".\n// Note that the name of the module is implied by the file name. It is best\n// if the file name and the exported global have matching names.\n\n// If the 'b' module also uses this type of boilerplate, then\n// in the browser, it will create a global .b that is used below.\n\n// If you do not want to support the browser global path, then you\n// can remove the `root` use and the passing `this` as the first arg to\n// the top function.\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(factory);\n    } else if (typeof module === 'object' && module.exports) {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        root.JStage = factory();\n    }\n})(window, function () {\n    // Just return a value to define the module export.\n    // This example returns an object, but the module\n    // can return a function as the exported value.\n    return JStage;\n});"]}