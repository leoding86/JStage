{"version":3,"sources":["JStage.js","Obj.js","Script.js","index.js"],"names":["JStage","el","width","height","this","getEl","scale","startTimestamp","currentTimestamp","duration","status","IS_IDLE","currentSetupOffsets","loops","resources","objs","document","querySelector","jQuery","Node","nodeType","normalizeTime","time","indexOf","slice","isNaN","getStyle","prop","undefined","getComputedStyle","currentStyle","getPropertyValue","IS_FINISHED","IS_ANIMATING","prototype","addResource","resource","push","loadResources","callbacks","len","length","loadedLen","forEach","image","Image","onload","onProgress","call","onComplete","src","complete","load","createObj","left","right","obj","Obj","appendObj","isAnimating","inSetup","setupOffset","addCurrentSetupOffset","removeFromCurrentSetups","index","splice","init","self","setScale","offsetWidth","offsetHeight","style","getReady","standby","resizeEl","recal","wScale","hScale","start","startSetup","OPEN_SETUP","window","requestAnimationFrame","update","bind","isStatic","setProgress","stopSetup","offset","hasSetup","stop","timestamp","updateSetup","finished","isCompleted","setTime","progress","stage","setStage","top","state","intermediateState","setups","propDiff","executingScripts","currentSetup","IS_STATIC","setEl","setSize","setPosition","PROP_DEFAULT","scaleX","scaleY","translateX","translateY","rotate","skew","skewX","skewY","TRANSFORMS","INIT_SETUP","IS_COMPLETED","addBatchSetups","addSetup","setState","value","getPropDefaultValue","createSetup","getSetup","key","scripts","setup","Array","script","addScript","getDuration","addSetups","addLoopSetup","setupOffsets","addOpenSetup","Script","property","delay","timingFunction","getPropValue","getPropDiffVal","from","to","toLowerCase","createPropDiff","toValue","parseInt","diffVal","fromVal","patchPropDiff","getPropDiff","updateIntermediateState","render","loopSetup","performance","now","Date","getCurrentTimestamp","isComplete","isSkip","executing","isExecuting","skip","standbyLoop","getStartTimestamp","renderState","transformStyle","getScale","transform","openSetup","resetSetup","getSetupReady","finState","getFinState","isIdle","appendToStage","reset","scriptDuration","propDelay","transforms","id","i","IDLE","EXECUTING","SKIP","COMPLETE","getProgressValue","root","factory","define","amd","module","exports"],"mappings":"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","file":"../JStage.min.js","sourcesContent":["/**\r\n * 舞台构造函数\r\n * @constructor\r\n * @param {int} el\r\n * @param {int} width 舞台的标准宽度，不是元素的实际宽度\r\n * @param {int} height 舞台的标准高度，不是元素的实际高度\r\n */\r\nfunction JStage(el, width, height) {\r\n    this.el = JStage.getEl(el);\r\n    this.width = width,\r\n    this.height = height,\r\n    this.scale,\r\n    this.startTimestamp,\r\n    this.currentTimestamp,\r\n    this.duration = 0,\r\n    this.status = JStage.IS_IDLE,\r\n    this.currentSetupOffsets = [],\r\n    this.loops = [],\r\n    this.resources = [],\r\n    this.objs = [];\r\n}\r\n\r\nJStage.getEl = function(el) {\r\n    if (typeof el === 'string') {\r\n        return document.querySelector(el);\r\n    } else if (el instanceof jQuery) {\r\n        return el[0];\r\n    } else if (typeof el === 'object' &&\r\n        (el instanceof Node && el.nodeType > 0)\r\n    ) {\r\n        return el;\r\n    } else {\r\n        throw 'Invalid el';\r\n    }\r\n};\r\n\r\nJStage.normalizeTime = function(time) {\r\n    if (!time) {\r\n        return 0;\r\n    }\r\n\r\n    if (typeof time === 'number') {\r\n        return time;\r\n    } else if (time.indexOf('ms') > 0) {\r\n        return time.slice(0, -2) - 0;\r\n    } else if (time.indexOf('s') > 0) {\r\n        return time.slice(0, -1) * 1000;\r\n    } else if (isNaN(time)) {\r\n        return time;\r\n    }\r\n};\r\n\r\nJStage.getStyle = function(el, prop) {\r\n    if (typeof getComputedStyle === undefined) {\r\n        return el.currentStyle[prop];\r\n    } else {\r\n        return getComputedStyle(el, null).getPropertyValue(prop);\r\n    }\r\n};\r\n\r\nJStage.IS_IDLE = 0;\r\nJStage.IS_FINISHED = 1;\r\nJStage.IS_ANIMATING = 2;\r\n\r\nJStage.prototype = {\r\n    /**\r\n     * 添加资源\r\n     * @param {string} resource\r\n     */\r\n    addResource: function(resource) {\r\n        if (this.resources.indexOf(resource) < 0) {\r\n            this.resources.push(resource);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    loadResources: function(callbacks) {\r\n        var len = this.resources.length;\r\n        var loadedLen = 0;\r\n\r\n        this.resources.forEach(function(resource) {\r\n            var image = new Image;\r\n            image.onload = function() {\r\n                loadedLen++;\r\n\r\n                if (callbacks.onProgress && typeof callbacks.onProgress === 'function') {\r\n                    callbacks.onProgress.call(this, len, loadedLen);\r\n                }\r\n\r\n                if (loadedLen === len && callbacks.onComplete && typeof callbacks.onComplete === 'function') {\r\n                    callbacks.onComplete.call(null);\r\n                }\r\n            }\r\n\r\n            image.src = resource;\r\n\r\n            if (image.complete) {\r\n                image.load();\r\n            }\r\n        });\r\n    },\r\n\r\n    /**\r\n     * 在舞台上创建一个物体\r\n     * @param {mixed} el 元素对象\r\n     * @param {int} width\r\n     * @param {int} height\r\n     * @param {int} left\r\n     * @param {int} right\r\n     * @returns {JStage.Obj}\r\n     */\r\n    createObj: function(el, width, height, left, right) {\r\n        var obj = new JStage.Obj(el, width, height, left, right);\r\n        this.appendObj(obj);\r\n        return obj;\r\n    },\r\n\r\n    isAnimating: function() {\r\n        return this.status === JStage.IS_ANIMATING;\r\n    },\r\n\r\n    inSetup: function(setupOffset) {\r\n        return this.currentSetupOffsets.indexOf(setupOffset) > -1;\r\n    },\r\n\r\n    addCurrentSetupOffset: function(setupOffset) {\r\n        if (this.currentSetupOffsets.indexOf(setupOffset) < 0) {\r\n            this.currentSetupOffsets.push(setupOffset);\r\n        }\r\n    },\r\n\r\n    removeFromCurrentSetups: function(setupOffset) {\r\n        var index = this.currentSetupOffsets.indexOf(setupOffset);\r\n\r\n        if (index > -1) {\r\n            this.currentSetupOffsets.splice(index, 1);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 初始化舞台\r\n     */\r\n    init: function() {\r\n        var self = this;\r\n\r\n        this.setScale(this.el.offsetWidth, this.el.offsetHeight);\r\n\r\n        this.el.style.width = this.width * this.scale + 'px';\r\n        this.el.style.height = this.height * this.scale + 'px';\r\n\r\n        // 将舞台元素准备到位\r\n        this.objs.forEach(function(obj) {\r\n            obj.getReady();\r\n\r\n            if (obj.duration > self.duration) {\r\n                self.duration = obj.duration;\r\n            }\r\n        });\r\n    },\r\n\r\n    standby: function(setupOffset) {\r\n        this.startTimestamp = null;\r\n        this.currentTimestamp = null;\r\n\r\n        if (undefined === setupOffset) {\r\n            return;\r\n        }\r\n\r\n        this.objs.forEach(function(obj) {\r\n            obj.standby(setupOffset);\r\n        }, this);\r\n    },\r\n\r\n    /**\r\n     * 重置舞台元素实际尺寸\r\n     * @param {int|float} width\r\n     * @param {int|float} height\r\n     */\r\n    resizeEl: function(width, height) {\r\n        this.setScale(width, height)\r\n\r\n        // 设置舞台元素的尺寸\r\n        this.el.style.width = this.width * this.scale + 'px';\r\n        this.el.style.height = this.height * this.scale + 'px';\r\n\r\n        this.objs.forEach(function(obj) {\r\n            obj.recal();\r\n        });\r\n    },\r\n\r\n    /**\r\n     * 设置舞台的缩放比例\r\n     * @param {int|float} width 舞台元素实际宽度\r\n     * @param {int|float} height 舞台元素实际宽度\r\n     */\r\n    setScale: function(width, height) {\r\n        var wScale = width / this.width;\r\n        var hScale = height / this.height;\r\n\r\n        if (wScale > hScale) {\r\n            this.scale = hScale;\r\n        } else {\r\n            this.scale = wScale;\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    start: function() {\r\n        this.startSetup(JStage.Obj.OPEN_SETUP);\r\n    },\r\n\r\n    startSetup: function(setupOffset) {\r\n        this.addCurrentSetupOffset(setupOffset);\r\n        this.standby(setupOffset);\r\n\r\n        if (!!window.requestAnimationFrame) {\r\n            if (!this.isAnimating()) {\r\n                this.status = JStage.IS_ANIMATING;\r\n                window.requestAnimationFrame(this.update.bind(this));\r\n            }\r\n            return;\r\n        }\r\n\r\n        this.objs.forEach(function(obj) {\r\n            if (!obj.isStatic()) {\r\n                obj.setProgress(1);\r\n            }\r\n        });\r\n    },\r\n\r\n    stopSetup: function(offset) {\r\n        this.objs.forEach(function(obj) {\r\n            if (obj.hasSetup(offset)) {\r\n                obj.stop(offset);\r\n            }\r\n        });\r\n    },\r\n\r\n    update: function(timestamp) {\r\n        if (!this.startTimestamp) {\r\n            this.startTimestamp = timestamp;\r\n        }\r\n\r\n        this.currentTimestamp = timestamp;\r\n\r\n        this.updateSetup(timestamp);\r\n\r\n        window.requestAnimationFrame(this.update.bind(this));\r\n    },\r\n\r\n    updateSetup: function() {\r\n        this.currentSetupOffsets.forEach(function(setupOffset) {\r\n            var finished;\r\n\r\n            this.objs.forEach(function(obj) {\r\n\r\n                // console.log(setupOffset, obj, obj.hasSetup(setupOffset), obj.isStatic(), obj.isCompleted());\r\n\r\n                if (obj.hasSetup(setupOffset) &&\r\n                    !(obj.isStatic() || obj.isCompleted())\r\n                ) {\r\n                    finished = false;\r\n                    obj.update(setupOffset);\r\n                }\r\n            }, this);\r\n\r\n            if (finished === undefined) {\r\n                this.removeFromCurrentSetups(setupOffset);\r\n            }\r\n        }, this);\r\n    },\r\n\r\n    setTime: function(time) {\r\n        //\r\n    },\r\n\r\n    setProgress: function(progress) {\r\n        //\r\n    },\r\n\r\n    /**\r\n     * 往舞台上添加物体\r\n     * @param {JShow.Obj} obj\r\n     */\r\n    appendObj: function(obj) {\r\n        if (!obj.stage && obj.stage !== this) {\r\n            this.objs.push(obj);\r\n            obj.setStage(this);\r\n        }\r\n    }\r\n};","JStage.Obj = function(el, width, height, left, top) {\r\n    this.el, // dom对象\r\n    this.state = {},\r\n    this.intermediateState = {} // 中间状态\r\n    this.setups = {}, // 动画状态\r\n    this.loops = {},\r\n    this.propDiff = {},\r\n    this.executingScripts = {},\r\n    this.currentSetup,\r\n\r\n    this.width,\r\n    this.height,\r\n    this.left,\r\n    this.top,\r\n    this.duration = 0;\r\n    this.stage,\r\n    this.status = JStage.Obj.IS_STATIC,\r\n\r\n    this.setEl(el);\r\n    this.setSize(width, height);\r\n    this.setPosition(left, top);\r\n}\r\n\r\nJStage.Obj.PROP_DEFAULT = {\r\n    scale   : 1,\r\n    scaleX  : 1,\r\n    scaleY  : 1,\r\n    translateX  : 0,\r\n    translateY  : 0,\r\n    rotate  : 0,\r\n    skew    : 0,\r\n    skewX   : 0,\r\n    skewY   : 0\r\n};\r\nJStage.Obj.TRANSFORMS = [\r\n    'translateX',\r\n    'translateY',\r\n    'rotate',\r\n    'skew',\r\n    'skewX',\r\n    'skewY',\r\n    'scale',\r\n    'scaleX',\r\n    'scaleY',\r\n];\r\nJStage.Obj.INIT_SETUP = 'INIT_SETUP'; // 初始化状态\r\nJStage.Obj.OPEN_SETUP = 'OPEN_SETUP'; // 开场状态\r\nJStage.Obj.IS_IDLE = 0;\r\nJStage.Obj.IS_COMPLETED = 2;\r\nJStage.Obj.IS_ANIMATING = 3;\r\nJStage.Obj.IS_STATIC = 4;\r\n\r\nJStage.Obj.addBatchSetups = function(objs, setups) {\r\n    objs.forEach(function(obj) {\r\n        for (var offset in setups) {\r\n            obj.addSetup(offset, setups[offset]);\r\n        }\r\n    });\r\n}\r\n\r\nJStage.Obj.prototype = {\r\n    setState: function(prop, value) {\r\n        this.state[prop] = value;\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param {string} prop\r\n     */\r\n    getPropDefaultValue: function(prop) {\r\n        if (undefined === JStage.Obj.PROP_DEFAULT[prop]) {\r\n            return 0;\r\n        } else {\r\n            return JStage.Obj.PROP_DEFAULT[prop];\r\n        }\r\n    },\r\n\r\n    createSetup: function(offset) {\r\n        if (undefined === this.getSetup(offset)) {\r\n            this.setups[offset] = {\r\n                key: offset,\r\n                scripts: [],\r\n                setups: [],\r\n                index: 0,\r\n                startTimestamp: null\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 添加状态脚本\r\n     * @param {string} offset\r\n     * @param {array} scripts\r\n     */\r\n    addSetup: function(offset, scripts) {\r\n        this.createSetup(offset);\r\n\r\n        var setup = this.getSetup(offset);\r\n\r\n        if (scripts instanceof Array && scripts.length > 0) {\r\n            scripts.forEach(function(script) {\r\n                this.addScript(offset, script)\r\n            }, this);\r\n        }\r\n\r\n        setup.duration = this.getDuration(setup);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param {object} setups\r\n     */\r\n    addSetups: function(setups) {\r\n        for (var offset in setups) {\r\n            this.addSetup(offset, setups[offset]);\r\n        }\r\n    },\r\n\r\n    addLoopSetup: function(offset, setupOffsets) {\r\n        this.createSetup(offset);\r\n\r\n        setupOffsets.forEach(function(setupOffset) {\r\n            var setup = this.getSetup(setupOffset);\r\n\r\n            if (setup) {\r\n                this.getSetup(offset).setups.push(setup);\r\n            }\r\n        }, this);\r\n    },\r\n\r\n    addOpenSetup: function(scripts) {\r\n        this.addSetup(JStage.Obj.OPEN_SETUP, scripts);\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * 为状态添加一个脚本\r\n     * @param {string} offset\r\n     * @param {object} script\r\n     */\r\n    addScript: function(offset, script) {\r\n        this.createSetup(offset);\r\n\r\n        this.status = JStage.Obj.IS_IDLE;\r\n\r\n        this.setups[offset].scripts.push(\r\n            new JStage.Script(script.property, script.value, script.duration, script.delay, script.timingFunction)\r\n        );\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param {string} offset\r\n     */\r\n    getSetup: function(offset) {\r\n        return this.setups[offset];\r\n    },\r\n\r\n    getPropValue: function(state, prop) {\r\n        return (undefined === state[prop]) ? this.getPropDefaultValue(prop) : state[prop];\r\n    },\r\n\r\n    getPropDiffVal: function(prop, from, to) {\r\n        if (prop.toLowerCase().indexOf('color') > -1) {\r\n            throw 'unsupported property ' + prop;\r\n        }\r\n\r\n        return to - from;\r\n    },\r\n\r\n    createPropDiff: function(script) {\r\n        var prop = script.property;\r\n        var toValue;\r\n\r\n        if (typeof script.value === 'string' &&\r\n            (script.value.indexOf('+') === 0 ||\r\n            script.value.indexOf('-') === 0)\r\n        ) {\r\n            toValue = this.getPropValue(this.state, prop) + parseInt(script.value)\r\n        } else {\r\n            toValue = script.value;\r\n        }\r\n\r\n        this.propDiff[script.property] = {\r\n            prop: prop,\r\n            diffVal: this.getPropDiffVal(\r\n                script.property,\r\n                this.getPropValue(this.state, prop),\r\n                toValue\r\n            ),\r\n            fromVal: this.getPropValue(this.state, prop)\r\n        };\r\n    },\r\n\r\n    patchPropDiff: function(propDiff, script) {\r\n        var prop = script.property;\r\n        var toValue;\r\n\r\n        if (typeof script.value === 'string' &&\r\n            (script.value.indexOf('+') === 0 ||\r\n            script.value.indexOf('-') === 0)\r\n        ) {\r\n            toValue = this.getPropValue(this.intermediateState, prop) + parseInt(script.value);\r\n        } else {\r\n            toValue = script.value;\r\n        }\r\n\r\n        propDiff.diffVal = this.getPropDiffVal(\r\n            script.property,\r\n            this.getPropValue(this.intermediateState, prop),\r\n            toValue\r\n        );\r\n        propDiff.fromVal = this.getPropValue(this.intermediateState, prop);\r\n    },\r\n\r\n    getPropDiff: function(offset) {\r\n        return this.propDiff[offset];\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param {object} propDIff\r\n     * @param {float} progress\r\n     */\r\n    updateIntermediateState: function(propDiff, progress) {\r\n        this.intermediateState[propDiff.prop] = progress * propDiff.diffVal + propDiff.fromVal;\r\n    },\r\n\r\n    update: function(setupOffset) {\r\n        this.render(setupOffset === undefined ? JStage.Obj.OPEN_SETUP : setupOffset);\r\n    },\r\n\r\n    stop: function(setupOffset) {\r\n        this.complete();\r\n\r\n        var setup = this.getSetup(setupOffset);\r\n\r\n        if (setup.setups.length > 0) {\r\n            setup.index = 0;\r\n        }\r\n    },\r\n\r\n    render: function() {\r\n        var setup = this.currentSetup;\r\n\r\n        if (!setup) {\r\n            return;\r\n        }\r\n\r\n        if (setup.setups.length > 0) {\r\n            var loopSetup = setup.setups[setup.index];\r\n            // loop\r\n\r\n            if (!loopSetup.startTimestamp) {\r\n                loopSetup.startTimestamp = !!performance ? performance.now() : Date.now();\r\n            }\r\n\r\n            var startTimestamp;\r\n            var currentTimestamp = this.getCurrentTimestamp();\r\n            var scripts = loopSetup.scripts;\r\n            var complete;\r\n\r\n            scripts.forEach(function(script) {\r\n                if (script.isComplete() || script.isSkip()) {\r\n                    return;\r\n                }\r\n\r\n                startTimestamp = loopSetup.startTimestamp;\r\n\r\n                complete = false;\r\n\r\n                if (script.delay > 0) {\r\n                    startTimestamp += script.delay;\r\n                }\r\n\r\n                if (startTimestamp > currentTimestamp) {\r\n                    return;\r\n                }\r\n\r\n                var progress = (currentTimestamp - startTimestamp) / script.duration;\r\n\r\n                if (progress > 1) {\r\n                    progress = 1;\r\n                }\r\n\r\n                script.executing();\r\n\r\n                if (undefined === this.executingScripts[script.property]) {\r\n                    this.executingScripts[script.property] = script;\r\n                    // create prop diff\r\n                    this.createPropDiff(script);\r\n                }\r\n\r\n                if (this.executingScripts[script.property] !== script &&\r\n                    !(script.isSkip() || script.isComplete())\r\n                ) {\r\n                    if (this.executingScripts[script.property].isExecuting()) {\r\n                        this.executingScripts[script.property].skip();\r\n                    }\r\n\r\n                    this.executingScripts[script.property] = script;\r\n                    // patch prop diff\r\n                    this.patchPropDiff(this.getPropDiff(script.property), script);\r\n                }\r\n\r\n                this.updateIntermediateState(this.getPropDiff(script.property), progress);\r\n\r\n                if (progress === 1) {\r\n                    script.complete();\r\n                }\r\n            }, this);\r\n\r\n            if (complete !== false) {\r\n                loopSetup.startTimestamp = null;\r\n\r\n                if (setup.index >= (setup.setups.length - 1)) {\r\n                    setup.index = 0;\r\n                } else {\r\n                    setup.index++;\r\n                }\r\n\r\n                this.standbyLoop(setup);\r\n            }\r\n        } else {\r\n            if (!setup.startTimestamp) {\r\n                setup.startTimestamp = this.getStartTimestamp();\r\n            }\r\n\r\n            var startTimestamp;\r\n            var currentTimestamp = this.getCurrentTimestamp();\r\n            var scripts = setup.scripts;\r\n            var complete;\r\n\r\n            scripts.forEach(function(script) {\r\n                if (script.isComplete() || script.isSkip()) {\r\n                    return;\r\n                }\r\n\r\n                startTimestamp = setup.startTimestamp;\r\n\r\n                complete = false;\r\n\r\n                if (script.delay > 0) {\r\n                    startTimestamp += script.delay;\r\n                }\r\n\r\n                if (startTimestamp > currentTimestamp) {\r\n                    return;\r\n                }\r\n\r\n                var progress = (currentTimestamp - startTimestamp) / script.duration;\r\n\r\n                if (progress > 1) {\r\n                    progress = 1;\r\n                }\r\n\r\n                script.executing();\r\n\r\n                if (undefined === this.executingScripts[script.property]) {\r\n                    this.executingScripts[script.property] = script;\r\n                    // create prop diff\r\n                    this.createPropDiff(script);\r\n                }\r\n\r\n                if (this.executingScripts[script.property] !== script &&\r\n                    !(script.isSkip() || script.isComplete())\r\n                ) {\r\n                    if (this.executingScripts[script.property].isExecuting()) {\r\n                        this.executingScripts[script.property].skip();\r\n                    }\r\n\r\n                    this.executingScripts[script.property] = script;\r\n                    // patch prop diff\r\n                    this.patchPropDiff(this.getPropDiff(script.property), script);\r\n                }\r\n\r\n                this.updateIntermediateState(this.getPropDiff(script.property), progress);\r\n\r\n                if (progress === 1) {\r\n                    script.complete();\r\n                }\r\n            }, this);\r\n\r\n            if (complete === false) {\r\n                this.status = JStage.Obj.IS_ANIMATING;\r\n            } else {\r\n                this.status = JStage.Obj.IS_COMPLETED;\r\n                setup.startTimestamp = null;\r\n            }\r\n        }\r\n\r\n        this.renderState();\r\n    },\r\n\r\n    renderState: function() {\r\n        var transformStyle = '';\r\n\r\n        for (var prop in this.intermediateState) {\r\n            if (JStage.Obj.TRANSFORMS.indexOf(prop) > -1) {\r\n                switch (prop) {\r\n                    case 'translateX':\r\n                    case 'translateY':\r\n                        transformStyle += prop + '(' + this.intermediateState[prop] + this.getScale() + 'px) ';\r\n                        break;\r\n                    case 'rotate':\r\n                    case 'skew':\r\n                    case 'skewX':\r\n                    case 'skewY':\r\n                        transformStyle += prop + '(' + this.intermediateState[prop] + 'deg) ';\r\n                        break;\r\n                    case 'scale':\r\n                    case 'scaleX':\r\n                    case 'scaleY':\r\n                        transformStyle += prop + '(' + this.intermediateState[prop] + ') ';\r\n                        break;\r\n                }\r\n            } else {\r\n                if (['left', 'top', 'width', 'height'].indexOf(prop) > -1) {\r\n                    this.el.style[prop] = this.intermediateState[prop] * this.getScale() + 'px';\r\n                } else {\r\n                    this.el.style[prop] = this.intermediateState[prop];\r\n                }\r\n            }\r\n        }\r\n\r\n        if (undefined !== transformStyle) {\r\n            this.el.style.transform = transformStyle;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 设置物体尺寸\r\n     * @param {int} width\r\n     * @param {int} height\r\n     * @returns {this}\r\n     */\r\n    setSize: function(width, height) {\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        this.setState('width', width)\r\n            .setState('height', height);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * 设置物体位置\r\n     * @param {int} left\r\n     * @param {int} top\r\n     * @returns {this}\r\n     */\r\n    setPosition: function(left, top) {\r\n        this.left = left;\r\n        this.top = top;\r\n\r\n        this.setState('left', left)\r\n            .setState('top', top);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * 获得当前元素的缩放比例\r\n     * @returns {float}\r\n     */\r\n    getScale: function() {\r\n        return this.stage.scale;\r\n    },\r\n\r\n    /**\r\n     * 获得当前舞台的开始时间戳\r\n     * @returns {float}\r\n     */\r\n    getStartTimestamp: function() {\r\n        return this.stage.startTimestamp;\r\n    },\r\n\r\n    /**\r\n     * 获得当前舞台的当前时间戳\r\n     * @returns {float}\r\n     */\r\n    getCurrentTimestamp: function() {\r\n        return this.stage.currentTimestamp;\r\n    },\r\n\r\n    /**\r\n     * Get the object ready, placing and style it.\r\n     */\r\n    getReady: function() {\r\n        var openSetup = this.getSetup(JStage.Obj.OPEN_SETUP);\r\n\r\n        if (undefined !== openSetup) {\r\n            this.resetSetup(openSetup);\r\n            this.duration = this.getDuration(openSetup);\r\n        }\r\n\r\n        // 重置中间状态\r\n        this.intermediateState = {};\r\n\r\n        // 初始化元素样式状态，包括当前状态以及阶段状态\r\n        for (var prop in this.state) {\r\n            this.intermediateState[prop] = this.state[prop];\r\n        }\r\n\r\n        this.renderState();\r\n    },\r\n\r\n    /**\r\n     * \r\n     * @param {*} setupOffset \r\n     */\r\n    getSetupReady: function(setupOffset) {\r\n        // 重置中间状态\r\n        this.intermediateState = {};\r\n\r\n        var setup = this.getSetup(setupOffset);\r\n        var finState = this.getFinState(setup);\r\n\r\n        for (var prop in setup.scripts) {\r\n            if (undefined === finState[prop]) {\r\n                finState[prop] = setup.scripts[prop];\r\n            }\r\n        }\r\n\r\n        for (var prop in finState) {\r\n            this.intermediateState[prop] = finState[prop];\r\n        }\r\n\r\n        this.duration = this.getDuration(setup);\r\n        this.renderState();\r\n    },\r\n\r\n    /**\r\n     * Set object dom\r\n     * @param {mixed} el \r\n     */\r\n    setEl: function(el) {\r\n        this.el = JStage.getEl(el);\r\n    },\r\n\r\n    /**\r\n     * Check if the object is animating\r\n     * @returns {boolean}\r\n     */\r\n    isAnimating: function() {\r\n        return this.status === JStage.Obj.IS_ANIMATING;\r\n    },\r\n\r\n    /**\r\n     * Check if the object's animation is complete\r\n     * @returns {boolean}\r\n     */\r\n    isCompleted: function() {\r\n        return this.status === JStage.Obj.IS_COMPLETED;\r\n    },\r\n\r\n    /**\r\n     * Set object animation is completed.\r\n     */\r\n    complete: function() {\r\n        this.status = JStage.Obj.IS_COMPLETED;\r\n    },\r\n\r\n    /**\r\n     * 判断元素是否是静止元素\r\n     * @returns {boolean}\r\n     */\r\n    isStatic: function() {\r\n        return this.status === JStage.Obj.IS_STATIC;\r\n    },\r\n\r\n    /**\r\n     * 判断元素是否是等待动画执行状态\r\n     * @returns {boolean}\r\n     */\r\n    isIdle: function() {\r\n        return this.status === JStage.Obj.IS_IDLE;\r\n    },\r\n\r\n    /**\r\n     * 重计算部分脚本\r\n     * 主要用于更新场景大小变化后元素的各种尺寸和位置相关属性\r\n     */\r\n    recal: function() {\r\n        if (!this.isAnimating()) {\r\n            this.renderState();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 将物体添加到指定的舞台上\r\n     * @param {JStage.Stage} stage\r\n     */\r\n    appendToStage: function(stage) {\r\n        stage.appendObj(this);\r\n    },\r\n\r\n    /**\r\n     * 设置物体到指定的舞台上\r\n     * @param {JStage.setStage} stage\r\n     */\r\n    setStage: function(stage) {\r\n        this.stage = stage;\r\n    },\r\n\r\n    /**\r\n     * 重置舞台元素状态\r\n     */\r\n    reset: function() {\r\n        this.getReady();\r\n    },\r\n\r\n    /**\r\n     * 设置舞台播放到指定毫秒数\r\n     * @param {int} time 舞台播放到指定毫秒数\r\n     */\r\n    setTime: function(time) {\r\n        //\r\n    },\r\n\r\n    /**\r\n     * 获得动画时间，这个时间包含延迟时间\r\n     * @param {object} setup\r\n     * @returns {int}\r\n     */\r\n    getDuration: function(setup) {\r\n        var duration = 0;\r\n        var scriptDuration = 0;\r\n\r\n        setup.scripts.forEach(function(script) {\r\n            scriptDuration = script.duration + script.delay;\r\n\r\n            if (duration < scriptDuration) {\r\n                duration = scriptDuration;\r\n            }\r\n        });\r\n\r\n        return duration;\r\n    },\r\n\r\n    /**\r\n     * 获得设置的最终状态，需要处理同属性延迟执行的情况，比如两个left移动先后执行\r\n     * @param {object} setup\r\n     */\r\n    getFinState: function(setup) {\r\n        var finState = {};\r\n        var propDelay = {};\r\n\r\n        setup.scripts.forEach(function(script) {\r\n            if (undefined === propDelay[script.property]) {\r\n                propDelay[script.property] = script.delay;\r\n                finState[script.property] = script.property;\r\n            } else if (script.delay > propDelay[script.property]) {\r\n                propDelay[script.property] = script.delay;\r\n                finState[script.property] = script.property;\r\n            }\r\n        });\r\n\r\n        return finState;\r\n    },\r\n\r\n    /**\r\n     * Reset setup status, include scripts in the setup\r\n     * @param {object} setup\r\n     */\r\n    resetSetup: function(setup) {\r\n        setup.scripts.forEach(function(script) {\r\n            /**\r\n             * Reset script status\r\n             */\r\n            script.reset();\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Get the setup ready\r\n     * @param {Object|string} offset \r\n     */\r\n    standby: function(offset) {\r\n        var setup = typeof offset === 'object' ? offset : this.getSetup(offset);\r\n\r\n        if (undefined === setup) {\r\n            return;\r\n        }\r\n\r\n        /**\r\n         * If the setup is a loop setup, should get the setups in this ready\r\n         */\r\n        if (setup.setups.length > 0) {\r\n            setup.setups.forEach(function(loopSetup) {\r\n                this.standby(loopSetup);\r\n            }, this);\r\n        }\r\n\r\n        this.currentSetup = setup;\r\n        setup.startTimestamp = null;\r\n        this.status = JStage.Obj.IS_IDLE;\r\n        this.resetSetup(setup);\r\n    },\r\n\r\n    /**\r\n     * Get the setup in side the loop ready\r\n     * @param {Object} setup Loop setup\r\n     */\r\n    standbyLoop: function(setup) {\r\n        this.standby(setup.setups[setup.index]);\r\n\r\n        // Override current setup to current loop setup\r\n        this.currentSetup = setup;\r\n    },\r\n\r\n    /**\r\n     * Check if object has specified setup\r\n     * @param {string} offset \r\n     */\r\n    hasSetup: function(offset) {\r\n        return undefined !== this.setups[offset];\r\n    }\r\n};","/**\r\n * 元素脚本\r\n * @param {string} property\r\n * @param {mixed} value 变化值，不是目标值\r\n * @param {mixed} duration\r\n * @param {string} timingFunction\r\n * @param {int} delay 毫秒单位\r\n */\r\nJStage.Script = function(property, value, duration, delay, timingFunction) {\r\n    this.transforms = ['scaleX', 'scaleY', 'skewX', 'skewY', 'rotate', 'translateX', 'translateY'];\r\n\r\n    this.id = JStage.Script.i++;\r\n    this.property = property;\r\n    this.value = value;\r\n    this.duration = this.normalizeTime(duration);\r\n    this.timingFunction = !!timingFunction ? timingFunction : 'linear';\r\n    this.delay = this.normalizeTime(delay);\r\n    this.status = JStage.Script.IDLE;\r\n};\r\n\r\nJStage.Script.i = 0;\r\nJStage.Script.IDLE = 0;\r\nJStage.Script.EXECUTING = 1;\r\nJStage.Script.SKIP = 2;\r\nJStage.Script.COMPLETE = 3;\r\n\r\nJStage.Script.prototype = {\r\n    reset: function() {\r\n        this.status = JStage.Script.IDLE;\r\n    },\r\n\r\n    executing: function() {\r\n        this.status = JStage.Script.EXECUTING;\r\n    },\r\n\r\n    skip: function() {\r\n        this.status = JStage.Script.SKIP;\r\n    },\r\n\r\n    complete: function() {\r\n        this.status = JStage.Script.COMPLETE;\r\n    },\r\n\r\n    isExecuting: function() {\r\n        return this.status === JStage.Script.EXECUTING;\r\n    },\r\n\r\n    isSkip: function() {\r\n        return this.status === JStage.Script.SKIP;\r\n    },\r\n\r\n    isComplete: function() {\r\n        return this.status === JStage.Script.COMPLETE;\r\n    },\r\n\r\n    normalizeTime: function(time) {\r\n        if (!time) {\r\n            return 0;\r\n        }\r\n    \r\n        if (typeof time === 'number') {\r\n            return time;\r\n        } else if (time.indexOf('ms') > 0) {\r\n            return time.slice(0, -2) - 0;\r\n        } else if (time.indexOf('s') > 0) {\r\n            return time.slice(0, -1) * 1000;\r\n        } else if (isNaN(time)) {\r\n            return time;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 根据运行进度来计算脚本当前进度的值\r\n     * @param {float} progress\r\n     */\r\n    getProgressValue: function(progress) {\r\n        return progress * this.value;\r\n    }\r\n};","// Uses Node, AMD or browser globals to create a module.\r\n\r\n// If you want something that will work in other stricter CommonJS environments,\r\n// or if you need to create a circular dependency, see commonJsStrict.js\r\n\r\n// Defines a module \"returnExports\" that depends another module called \"b\".\r\n// Note that the name of the module is implied by the file name. It is best\r\n// if the file name and the exported global have matching names.\r\n\r\n// If the 'b' module also uses this type of boilerplate, then\r\n// in the browser, it will create a global .b that is used below.\r\n\r\n// If you do not want to support the browser global path, then you\r\n// can remove the `root` use and the passing `this` as the first arg to\r\n// the top function.\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        // AMD. Register as an anonymous module.\r\n        define(factory);\r\n    } else if (typeof module === 'object' && module.exports) {\r\n        // Node. Does not work with strict CommonJS, but\r\n        // only CommonJS-like environments that support module.exports,\r\n        // like Node.\r\n        module.exports = factory();\r\n    } else {\r\n        // Browser globals (root is window)\r\n        root.JStage = factory();\r\n    }\r\n})(window, function () {\r\n    // Just return a value to define the module export.\r\n    // This example returns an object, but the module\r\n    // can return a function as the exported value.\r\n    return JStage;\r\n});"]}